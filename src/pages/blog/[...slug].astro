---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPostLayout from "../../layouts/BlogPost.astro";
import { isPostPublished, type PublishedPost } from "../../consts";

export async function getStaticPaths() {
  return (await getCollection("blog"))
    .filter(isPostPublished)
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .map((post, index, postsFiltered) => ({
      params: { slug: post.slug },
      props: {
        post,
        prev: postsFiltered[index + 1],
        next: postsFiltered[index - 1],
      },
    }));
}

type Props = {
  post: PublishedPost;
  next?: CollectionEntry<"blog">;
  prev?: CollectionEntry<"blog">;
};

const { post, next, prev } = Astro.props;
const { Content } = await post.render();
---

<BlogPostLayout
  {...post.data}
  next={next ? { title: next.data.title, slug: next.slug } : undefined}
  prev={prev ? { title: prev.data.title, slug: prev.slug } : undefined}
>
  <Content />
</BlogPostLayout>
